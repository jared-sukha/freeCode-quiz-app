{"ast":null,"code":"var _jsxFileName = \"/Users/jaredsukha/devexercises/quiz-app/starter/src/App.js\";\nimport React, { useState } from 'react';\nexport default function App() {\n  const questions = [{\n    questionText: 'What is the capital of France?',\n    answerOptions: [{\n      answerText: 'New York',\n      isCorrect: false\n    }, {\n      answerText: 'London',\n      isCorrect: false\n    }, {\n      answerText: 'Paris',\n      isCorrect: true\n    }, {\n      answerText: 'Dublin',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'Who is CEO of Tesla?',\n    answerOptions: [{\n      answerText: 'Jeff Bezos',\n      isCorrect: false\n    }, {\n      answerText: 'Elon Musk',\n      isCorrect: true\n    }, {\n      answerText: 'Bill Gates',\n      isCorrect: false\n    }, {\n      answerText: 'Tony Stark',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'The iPhone was created by which company?',\n    answerOptions: [{\n      answerText: 'Apple',\n      isCorrect: true\n    }, {\n      answerText: 'Intel',\n      isCorrect: false\n    }, {\n      answerText: 'Amazon',\n      isCorrect: false\n    }, {\n      answerText: 'Microsoft',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'How many Harry Potter books are there?',\n    answerOptions: [{\n      answerText: '1',\n      isCorrect: false\n    }, {\n      answerText: '4',\n      isCorrect: false\n    }, {\n      answerText: '6',\n      isCorrect: false\n    }, {\n      answerText: '7',\n      isCorrect: true\n    }]\n  }];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n\n  const handleAnswerClick = answerOption => {\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      alert;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, false ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"score-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"You scored 1 out of \", questions.length) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, \"Question 1\"), \"/\", questions.length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, questions[currentQuestion].questionText)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, questions[currentQuestion].answerOptions.map((answer, i) => /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleAnswerClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, answer.answerText)))));\n}","map":{"version":3,"sources":["/Users/jaredsukha/devexercises/quiz-app/starter/src/App.js"],"names":["React","useState","App","questions","questionText","answerOptions","answerText","isCorrect","currentQuestion","setCurrentQuestion","handleAnswerClick","answerOption","nextQuestion","length","alert","map","answer","i"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nexport default function App() {\n\n   const questions = [\n    {\n      questionText: 'What is the capital of France?',\n      answerOptions: [\n        { answerText: 'New York', isCorrect: false },\n        { answerText: 'London', isCorrect: false },\n        { answerText: 'Paris', isCorrect: true },\n        { answerText: 'Dublin', isCorrect: false },\n      ],\n    },\n    {\n      questionText: 'Who is CEO of Tesla?',\n      answerOptions: [\n        { answerText: 'Jeff Bezos', isCorrect: false },\n        { answerText: 'Elon Musk', isCorrect: true },\n        { answerText: 'Bill Gates', isCorrect: false },\n        { answerText: 'Tony Stark', isCorrect: false },\n      ],\n    },\n    {\n      questionText: 'The iPhone was created by which company?',\n      answerOptions: [\n        { answerText: 'Apple', isCorrect: true },\n        { answerText: 'Intel', isCorrect: false },\n        { answerText: 'Amazon', isCorrect: false },\n        { answerText: 'Microsoft', isCorrect: false },\n      ],\n    },\n    {\n      questionText: 'How many Harry Potter books are there?',\n      answerOptions: [\n        { answerText: '1', isCorrect: false },\n        { answerText: '4', isCorrect: false },\n        { answerText: '6', isCorrect: false },\n        { answerText: '7', isCorrect: true },\n      ],\n    },\n  ]\n\n  const [currentQuestion, setCurrentQuestion] = useState(0)\n\n  const handleAnswerClick = (answerOption) =>{\n    const nextQuestion = currentQuestion + 1;\n    if(nextQuestion < questions.length){\n      setCurrentQuestion(nextQuestion)\n    } else{\n      alert\n    }\n  }\n\n  return (\n    <div className=\"app\">\n      {/* HINT: replace \"false\" with logic to display the \n      score when the user has answered all the questions */}\n      {false ? (\n        <div className=\"score-section\">\n          You scored 1 out of {questions.length}\n        </div>\n      ) : (\n        <>\n          <div className=\"question-section\">\n            <div className=\"question-count\">\n              <span>Question 1</span>/{questions.length}\n            </div>\n            <div className=\"question-text\">{questions[currentQuestion].questionText}</div>\n          </div>\n          <div className=\"answer-section\">\n            {questions[currentQuestion].answerOptions.map((answer, i) => (\n              <button onClick={()=>handleAnswerClick()}>{answer.answerText}</button>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}